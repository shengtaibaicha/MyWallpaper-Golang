// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: file-rpc.proto

package server

import (
	"context"

	"go-zero/apps/rpc/file/file"
	"go-zero/apps/rpc/file/internal/logic/file"
	"go-zero/apps/rpc/file/internal/svc"
)

type FileServer struct {
	svcCtx *svc.ServiceContext
	file.UnimplementedFileServer
}

func NewFileServer(svcCtx *svc.ServiceContext) *FileServer {
	return &FileServer{
		svcCtx: svcCtx,
	}
}

func (s *FileServer) UploadFile(ctx context.Context, in *file.UploadReq) (*file.UploadResponse, error) {
	l := filelogic.NewUploadFileLogic(ctx, s.svcCtx)
	return l.UploadFile(in)
}

func (s *FileServer) FindByPage(ctx context.Context, in *file.FindByPageReq) (*file.FindByPageResp, error) {
	l := filelogic.NewFindByPageLogic(ctx, s.svcCtx)
	return l.FindByPage(in)
}

func (s *FileServer) DownloadFile(ctx context.Context, in *file.DownloadFileReq) (*file.DownloadFileResp, error) {
	l := filelogic.NewDownloadFileLogic(ctx, s.svcCtx)
	return l.DownloadFile(in)
}

func (s *FileServer) FindPageByTag(ctx context.Context, in *file.FindPageByTagReq) (*file.FindPageByTagResp, error) {
	l := filelogic.NewFindPageByTagLogic(ctx, s.svcCtx)
	return l.FindPageByTag(in)
}

func (s *FileServer) FindPageByName(ctx context.Context, in *file.FindPageByNameReq) (*file.FindPageByNameResp, error) {
	l := filelogic.NewFindPageByNameLogic(ctx, s.svcCtx)
	return l.FindPageByName(in)
}

func (s *FileServer) DeleteFile(ctx context.Context, in *file.DeleteFileReq) (*file.DeleteFileResp, error) {
	l := filelogic.NewDeleteFileLogic(ctx, s.svcCtx)
	return l.DeleteFile(in)
}

func (s *FileServer) CollectFile(ctx context.Context, in *file.CollectFileReq) (*file.CollectFileResp, error) {
	l := filelogic.NewCollectFileLogic(ctx, s.svcCtx)
	return l.CollectFile(in)
}

func (s *FileServer) FileUserPage(ctx context.Context, in *file.FileUserPageReq) (*file.FileUserPageResp, error) {
	l := filelogic.NewFileUserPageLogic(ctx, s.svcCtx)
	return l.FileUserPage(in)
}

func (s *FileServer) GetTags(ctx context.Context, in *file.GetTagsReq) (*file.GetTagsResp, error) {
	l := filelogic.NewGetTagsLogic(ctx, s.svcCtx)
	return l.GetTags(in)
}
