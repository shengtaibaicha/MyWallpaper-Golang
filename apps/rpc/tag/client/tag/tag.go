// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: tag-rpc.proto

package tag

import (
	"context"

	"go-zero/apps/rpc/tag/tag"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetTagsReq  = tag.GetTagsReq
	GetTagsResp = tag.GetTagsResp

	Tag interface {
		GetTags(ctx context.Context, in *GetTagsReq, opts ...grpc.CallOption) (*GetTagsResp, error)
	}

	defaultTag struct {
		cli zrpc.Client
	}
)

func NewTag(cli zrpc.Client) Tag {
	return &defaultTag{
		cli: cli,
	}
}

func (m *defaultTag) GetTags(ctx context.Context, in *GetTagsReq, opts ...grpc.CallOption) (*GetTagsResp, error) {
	client := tag.NewTagClient(m.cli.Conn())
	return client.GetTags(ctx, in, opts...)
}
