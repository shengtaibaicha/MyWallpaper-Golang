// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: user-rpc.proto

package register

import (
	"context"
	user2 "go-zero/apps/rpc/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReq     = user2.LoginReq
	LoginResp    = user2.LoginResp
	RegisterReq  = user2.RegisterReq
	RegisterResp = user2.RegisterResp

	Register interface {
		UserRegister(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
	}

	defaultRegister struct {
		cli zrpc.Client
	}
)

func NewRegister(cli zrpc.Client) Register {
	return &defaultRegister{
		cli: cli,
	}
}

func (m *defaultRegister) UserRegister(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := user2.NewRegisterClient(m.cli.Conn())
	return client.UserRegister(ctx, in, opts...)
}
