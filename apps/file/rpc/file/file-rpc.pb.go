// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: file-rpc.proto

package file

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          []byte                 `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`         // 文件数据流
	Filename      string                 `protobuf:"bytes,2,opt,name=Filename,proto3" json:"Filename,omitempty"` // 原始文件名
	Size          int64                  `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`        // 文件大小（字节）
	MimeType      string                 `protobuf:"bytes,4,opt,name=MimeType,proto3" json:"MimeType,omitempty"` // 文件MIME类型（如image/jpeg）
	UserId        string                 `protobuf:"bytes,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TagId         int32                  `protobuf:"varint,6,opt,name=TagId,proto3" json:"TagId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadReq) Reset() {
	*x = UploadReq{}
	mi := &file_file_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReq) ProtoMessage() {}

func (x *UploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReq.ProtoReflect.Descriptor instead.
func (*UploadReq) Descriptor() ([]byte, []int) {
	return file_file_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *UploadReq) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UploadReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadReq) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *UploadReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadReq) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

// 上传响应
type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	FileId        string                 `protobuf:"bytes,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`    // 文件唯一标识
	FileUrl       string                 `protobuf:"bytes,3,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"` // 文件访问URL
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                // 提示信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_file_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_file_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadResponse) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *UploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_file_rpc_proto protoreflect.FileDescriptor

const file_file_rpc_proto_rawDesc = "" +
	"\n" +
	"\x0efile-rpc.proto\x12\x04file\"\x99\x01\n" +
	"\tUploadReq\x12\x12\n" +
	"\x04File\x18\x01 \x01(\fR\x04File\x12\x1a\n" +
	"\bFilename\x18\x02 \x01(\tR\bFilename\x12\x12\n" +
	"\x04Size\x18\x03 \x01(\x03R\x04Size\x12\x1a\n" +
	"\bMimeType\x18\x04 \x01(\tR\bMimeType\x12\x16\n" +
	"\x06UserId\x18\x05 \x01(\tR\x06UserId\x12\x14\n" +
	"\x05TagId\x18\x06 \x01(\x05R\x05TagId\"x\n" +
	"\x0eUploadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\x12\x19\n" +
	"\bfile_url\x18\x03 \x01(\tR\afileUrl\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage2A\n" +
	"\n" +
	"FileUpload\x123\n" +
	"\n" +
	"UploadFile\x12\x0f.file.UploadReq\x1a\x14.file.UploadResponseB\bZ\x06./fileb\x06proto3"

var (
	file_file_rpc_proto_rawDescOnce sync.Once
	file_file_rpc_proto_rawDescData []byte
)

func file_file_rpc_proto_rawDescGZIP() []byte {
	file_file_rpc_proto_rawDescOnce.Do(func() {
		file_file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_rpc_proto_rawDesc), len(file_file_rpc_proto_rawDesc)))
	})
	return file_file_rpc_proto_rawDescData
}

var file_file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_file_rpc_proto_goTypes = []any{
	(*UploadReq)(nil),      // 0: file.UploadReq
	(*UploadResponse)(nil), // 1: file.UploadResponse
}
var file_file_rpc_proto_depIdxs = []int32{
	0, // 0: file.FileUpload.UploadFile:input_type -> file.UploadReq
	1, // 1: file.FileUpload.UploadFile:output_type -> file.UploadResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_file_rpc_proto_init() }
func file_file_rpc_proto_init() {
	if File_file_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_rpc_proto_rawDesc), len(file_file_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_rpc_proto_goTypes,
		DependencyIndexes: file_file_rpc_proto_depIdxs,
		MessageInfos:      file_file_rpc_proto_msgTypes,
	}.Build()
	File_file_rpc_proto = out.File
	file_file_rpc_proto_goTypes = nil
	file_file_rpc_proto_depIdxs = nil
}
