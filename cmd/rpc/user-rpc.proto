syntax = "proto3";

package user;

option go_package = "./user";

message LoginReq {
  string userName = 1;
  string userPassword = 2;
}

message LoginResp {
  string token = 1;
}

message RegisterReq {
  string userName = 1;
  string userPassword = 2;
  string userEmail = 3;
}

message RegisterResp {
  string userId = 1;
}

message InfoReq {
  string userId = 1;
}

message InfoResp {
  string userName = 1;
  string userEmail = 2;
  string joinDate = 3;
  string userAvatar = 4;
  int64 uploadNumber = 5;
  int64 downloadNumber = 6;
  int64 collectNumber = 7;
  string role = 8;
  int32 enable = 9;
}

service user {
  rpc UserLogin(LoginReq) returns (LoginResp);

  rpc UserRegister(RegisterReq) returns (RegisterResp);

  rpc UserInfo(InfoReq) returns (InfoResp);
}

message AdminFindPageReq {
  int32 page = 1;
  int32 size = 2;
  string filter = 3;
}

message AdminFindPageResp {
  string records = 1;
  int32 total = 2;
  int32 size = 3;
  int32 current = 4;
  int32 pages = 5;
}

message AdminFindUserPageReq {
  int32 page = 1;
  int32 size = 2;
  string role = 3;
}

message AdminFindUserPageResp {
  string records = 1;
  int32 total = 2;
  int32 size = 3;
  int32 current = 4;
  int32 pages = 5;
}

service admin {
  rpc FindPage(AdminFindPageReq) returns (AdminFindPageResp);

  rpc FindUserPage(AdminFindUserPageReq) returns (AdminFindUserPageResp);
}
/*
  goctl rpc protoc user-rpc.proto --go_out=C:\Users\12793\Desktop\MyWallpaper\MyWallpaper-Golang\apps\rpc\user --go-grpc_out=C:\Users\12793\Desktop\MyWallpaper\MyWallpaper-Golang\apps\rpc\user --zrpc_out=C:\Users\12793\Desktop\MyWallpaper\MyWallpaper-Golang\apps\rpc\user -m
 */